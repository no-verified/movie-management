name: Release Pipeline

on:
  push:
    tags: 
      - '*.*.*'
      - '[0-9]+.[0-9]+.[0-9]+'
  repository_dispatch:
    types: [release-trigger]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8.6.10'
  RELEASE_TAG: ${{ github.event.client_payload.tag || github.ref_name }}

jobs:
  build-backend:
    name: Build and Push Backend Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.client_payload.tag || github.ref }}
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Extract metadata for backend
      id: meta-backend
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}/backend
        tags: |
          type=raw,value=${{ env.RELEASE_TAG }}
          type=raw,value=latest
      
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile.dev
        push: true
        tags: ${{ steps.meta-backend.outputs.tags }}
        labels: ${{ steps.meta-backend.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-frontend:
    name: Build and Push Frontend Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
          
    - name: Extract metadata for frontend
      id: meta-frontend
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}/frontend
        tags: |
          type=raw,value=${{ env.RELEASE_TAG }}
          type=raw,value=latest
        
    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile.dev
        push: true
        tags: ${{ steps.meta-frontend.outputs.tags }}
        labels: ${{ steps.meta-frontend.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        name: Release ${{ env.RELEASE_TAG }}
        body: |
          ## Changes
          - Automated release for version ${{ env.RELEASE_TAG }}
          
          ## Docker Images
          - Backend: `ghcr.io/${{ github.repository }}/backend:${{ env.RELEASE_TAG }}`
          - Frontend: `ghcr.io/${{ github.repository }}/frontend:${{ env.RELEASE_TAG }}`
        draft: false
        prerelease: false
        generate_release_notes: true